/*
 * $size: size in pixel you want to have at $breakpoint
 * $min-size: min size of the responsive font: doesn't go smaller
 * $max-size: max size of the responsive font: doesn't go bigger
 * $breakpoint: breakpoint to start using responsive fontSize
 */
@mixin fontSize($size, $breakpoint, $min-size: false, $max-size: false, $fallback: true) {
	// value for vw
	$responsive: $size * 100 / $breakpoint;

	//min value
  @if $min-size {
		$min-width: $size / ($breakpoint / $min-size);

		@media screen and (max-width: #{$min-size} * 1px) {
		  font-size: $min-width * 1px;
		}
	}

  @if $max-size {
		$max-width: $size / ($breakpoint / $max-size);

		@media screen and (min-width: #{$max-size} * 1px) {
		  font-size: $max-width * 1px;
		}
	}

  @if $fallback {
    font-size: $size * 1px;
  }

	font-size: $responsive * 1vw;
}


@mixin aspect-ratio($width, $height) {

	position: relative;
	display:block;

	&:before{
		display: block;
		content: "";
		width: 100%;
		$percent : ($height / $width) * 100%;
		padding-top: round($percent * 1000) / 1000;
	}
	> img{
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		width : 100%;
		height : auto;
	}
	> video{
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		width : 100%;
		height : auto;
	}
	
}

// mixins for use to easily input Font Style Guide
// px is optional too!
// letter spacing is optional for some edge cases
@mixin fontStyle($font-size, $line-height, $letter-spacing:"") {
	
		font-size: get-rem(get-value($font-size));
		line-height: unitless-lh($font-size, $line-height);
	
		//basic check fot letter spacing
		@if $letter-spacing != "" {
			@if unit($letter-spacing) == 'px' {
				letter-spacing: $letter-spacing;
			} @else{
				letter-spacing: $letter-spacing * 1px;
			}
		}
	};